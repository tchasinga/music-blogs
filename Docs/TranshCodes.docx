// Create a transporter object using the default SMTP transport
const transporter = nodemailer.createTransport({
  service: 'gmail', // You can use any email service you prefer
  auth: {
      user: process.env.EMAIL_USER, // Your email address
      pass: process.env.EMAIL_PASS, // Your email password
  },
});

// Adding a signup for user to the app...
const signup = async (req, res, next) => {
  try {
      const { username, email, password } = req.body;
      const salt = await bcrypt.genSalt(10);
      const hashedPassword = await bcrypt.hash(password, salt);
      const newUser = new User({
          username,
          email,
          password: hashedPassword,
      });
      const result = await newUser.save();

      // Send a welcome email
      const mailOptions = {
        from: process.env.EMAIL_USER || 'tchasingajacques@gmail.com', // Sender address
        to: email, // List of recipients
        subject: 'Welcome to Our App!', // Subject line
        html: `
            <div style="font-family: Arial, sans-serif; color: #333;">
                <h2 style="color: #4CAF50;">Welcome to Our Application, ${username}!</h2>
                <p>We're excited to have you on board.</p>
                <p style="margin-top: 20px;">
                    <img src="https://images.pexels.com/photos/3184302/pexels-photo-3184302.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" alt="Welcome Image" style="width: 150px; height: auto; border: none;">
                </p>
                <p>If you have any questions, feel free to reach out to us.</p>
                <p>Best Regards,<br>The Team</p>
                <p>If you have any questions, feel free to reach out to us. <br/> Tchasinga Balolebwami Jack </p>
            </div>
        `, // HTML body
    };

      transporter.sendMail(mailOptions, (error, info) => {
          if (error) {
              console.error('Error sending welcome email:', error);
          } else {
              console.log('Welcome email sent:', info.response);
          }
      });

      res.status(201).json({
          success: true,
          message: "User created successfully",
          data: result,
      });
  } catch (error) {
      next(error);
      res.status(400).json({
          success: false,
          message: "Failed to create a user in your system",
      });
  }
};